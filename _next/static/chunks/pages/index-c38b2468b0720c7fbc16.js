(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{3077:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return s}});var r=t(5893),u=t(9008),o=t(773),i=t(1075),s=function(){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(u.default,{children:(0,r.jsx)("title",{children:"GLSL testing"})}),(0,r.jsx)(o.Z,{fragment:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat easeOutBounce(float x) {\n  float n1 = 7.5625;\n  float d1 = 2.75;\n\n  if (x < 1.0 / d1) {\n      return n1 * x * x;\n  } else if (x < 2.0 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n}\n\nvoid main() {\n  float distanceToMouse = distance(u_mouse.xy, gl_FragCoord.xy);\n\n  float r = mod(distanceToMouse, 100.0 * ((sin(u_time) + 1.0) / 2.0)) / 100.0;\n\n  gl_FragColor = vec4(r, r, r, 1.0);\n}\n",vertex:i.Z,className:"canvas"})]})}},5301:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(3077)}])}},function(n){n.O(0,[304,774,888,179],(function(){return e=5301,n(n.s=e);var e}));var e=n.O();_N_E=e}]);